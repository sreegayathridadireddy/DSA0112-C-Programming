#include <iostream>
#include <cmath>
using namespace std;

class BinaryToOctal {
private:
    long long binaryNumber; 

public:
    BinaryToOctal(long long binary) {
        binaryNumber = binary;
    }
    long long binaryToDecimal() {
        long long decimal = 0;
        int power = 0;

        while (binaryNumber != 0) {
            int lastDigit = binaryNumber % 10;
            decimal += lastDigit * pow(2, power);
            binaryNumber /= 10;
            power++;
        }

        return decimal;
    }
    void decimalToOctal(long long decimal) {
        long long octal = 0;
        int power = 1;

        while (decimal != 0) {
            int lastDigit = decimal % 8;
            octal += lastDigit * power;
            decimal /= 8;
            power *= 10;
        }

        cout << "Octal: " << octal << endl;
    }

    void convert() {
        long long decimal = binaryToDecimal();
        cout << "Decimal: " << decimal << endl;
        decimalToOctal(decimal);
    }
};

int main() {
    long long binary;
    cout << "Enter a binary number: ";
    cin >> binary;
    BinaryToOctal converter(binary);

    converter.convert();

    return 0;
}
